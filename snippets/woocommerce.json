{
	"WooCommerce | Creates new status for Orders": {
		"prefix": "wootord",
		"body": [
			"/** ",
			" * Register new status",
			" * Tutorial: http://www.sellwithwp.com/woocommerce-custom-order-status-2/",
			"**/",
			"add_action( 'init', 'cmk_register_awaiting_shipment_order_status' );",
			"add_filter( 'wc_order_statuses', 'cmk_add_awaiting_shipment' );",
			"function cmk_register_awaiting_shipment_order_status() {",
			"",
			"\tregister_post_status( 'wc-sent', array(",
			"\t\t'label'\t\t\t\t\t => 'Enviado',",
			"\t\t'public'\t\t\t\t\t=> true,",
			"\t\t'exclude_from_search'\t   => false,",
			"\t\t'show_in_admin_all_list'\t=> true,",
			"\t\t'show_in_admin_status_list' => true,",
			"\t\t'label_count'\t\t\t   => _n_noop( 'Enviado <span class=\"count\">(%s)</span>', ",
			"\t\t\t'Enviados <span class=\"count\">(%s)</span>' )",
			"\t) );",
			"}",
			"",
			"// Add to list of WC Order statuses",
			"function cmk_add_awaiting_shipment( \\$order_statuses ) {",
			"",
			"\t\\$new_order_statuses = array();",
			"",
			"\t// add new order status after processing",
			"\tforeach ( \\$order_statuses as \\$key => \\$status ) {",
			"",
			"\t\t\\$new_order_statuses[ \\$key ] = \\$status;",
			"",
			"\t\tif ( 'wc-processing' === \\$key ) {",
			"\t\t\t\\$new_order_statuses['wc-sent'] = 'Enviado';",
			"\t\t}",
			"\t}",
			"",
			"\treturn \\$new_order_statuses;",
			"}"
		]
	},

	"WooCommerce | Removes Product Tag": {
		"prefix": "woorptag",
		"body": [
			"/**",
			" * Overwrite product_tag taxonomy properties to effectively hide it from WP admin ..",
			" */",
			"add_action( 'init', function() {",
			"\tregister_taxonomy('product_tag', 'product', [",
			"\t\t'public'            => false,",
			"\t\t'show_ui'           => false,",
			"\t\t'show_admin_column' => false,",
			"\t\t'show_in_nav_menus' => false,",
			"\t\t'show_tagcloud'     => false,",
			"\t]);",
			"}, 100 );",
			"",
			"/**",
			" * .. and also remove the column from Products table - it's also hardcoded there.",
			" */",
			"add_action( 'admin_init', function() {",
			"\tadd_filter('manage_product_posts_columns', function( $columns ) {",
			"\t\tunset( $columns['product_tag'] );",
			"\t\treturn $columns;",
			"\t}, 100);",
			"});"
		],
		"description": "WooCommerce | Removes Product Tag"
	},
	"WooCommerce | Removes SKU in detail page": {
		"prefix": "woorsku",
		"body": [
			"/**",
			" * Removes SKU in detail page.",
			" *",
			" * @param boolean \\$enabled Value to SKU enabled or not.",
			" * @return boolean \\$enabled",
			" */",
			"function cmk_remove_product_page_skus( \\$enabled ) {",
			"\tif ( ! is_admin() && is_product() ) {",
			"\t\treturn false;",
			"\t}",
			"\treturn \\$enabled;",
			"}",
			"add_filter( 'wc_product_sku_enabled', 'cmk_remove_product_page_skus' );"
		]
	}
}