{
	"WordPress | Comments Plugin Header": {
		"prefix": "wpapuh",
		"body": [
			"/**",
			" * ${1:Plugin Name}",
			" *",
			" * @package     ${2:PluginName}",
			" * @author      ${6:Author Name}",
			" * @copyright   ${8:Year} ${9:Company}",
			" * @license     GPL-2.0+",
			" *",
			" * @wordpress-plugin",
			" * Plugin Name: ${1:Plugin Name}",
			" * Plugin URI:  ${3:plugin-url}",
			" * Description: ${4: Plugin Description}.",
			" * Version:     ${5: Plugin Version}",
			" * Author:      ${6:Author Name}",
			" * Author URI:  ${7:Author URL}",
			" * Text Domain: ${10:Plugin Slug}",
			" * Domain Path: /languages",
			" * License:     GPL-2.0+",
			" * License URI: http://www.gnu.org/licenses/gpl-2.0.txt",
			" *",
			" * Prefix:      ${11:Plugin Functions Prefix}",
			" */",
			"",
			"defined( 'ABSPATH' ) || die( 'No script kiddies please!' );",
			"",
			"/**",
			" * Load localization files",
			" *",
			" * @return void",
			" */",
			"function ${11:Plugin Functions Prefix}_plugin_init() {",
			"\tload_plugin_textdomain( '${10:Plugin Slug}', false, dirname( plugin_basename( __FILE__ ) ) . '/languages' );",
			"}",
			"add_action( 'plugins_loaded', '${11:Plugin Functions Prefix}_plugin_init' );"	
		]
	},
	"Wordpress | Comments Plugin File Header": {
		"prefix": "wpahfil",
		"body": [
			"/**",
			" * ${1:name-file}",
			" *",
			" * ${2:description}",
			" *",
			" * @author   ${3:author}",
			" * @category ${4:category}",
			" * @package  ${5:package}",
			" * @version  ${6:version}",
			" */"
		]
	},
	"Comments - New section": {
		"prefix": "coasec",
		"body": [
			"/**",
			" * # $1",
			" * ---------------------------------------------------------------------------------------------------- */"
		]
	},
	"Comments - New subsection": {
		"prefix": "coassec",
		"body": [
			"/**",
			" * ## $1",
			" * --------------------------- */"
		]
	},
	"WordPress | Configuration for Local development": {
		"prefix": "wpaloc",
		"body": [
		  "define( 'DB_NAME', '${1:database}' );",
		  "define( 'DB_USER', 'root' );",
		  "define( 'DB_PASSWORD', 'root' );",
		  "define( 'WP_HOME', 'http://${2:url}.loc/' );",
		  "define( 'WP_SITEURL', 'http://${2:url}.loc/' );",
		  "define( 'DB_HOST', '127.0.0.1' );",
		  "",
		  "define( 'FS_METHOD','direct' );",
		  "define( 'WP_DEBUG', true );",
		  "define( 'WP_POST_REVISIONS', 3 );",
		  "",
		  "define( 'DB_CHARSET', 'utf8' );",
		  "define( 'DB_COLLATE', '' );",
		  "define( 'DISALLOW_FILE_EDIT', true );",
		  "",
		  "define( 'AUTH_KEY',         '' );",
		  "define( 'SECURE_AUTH_KEY',  '' );",
		  "define( 'LOGGED_IN_KEY',    '' );",
		  "define( 'NONCE_KEY',        '' );",
		  "define( 'AUTH_SALT',        '' );",
		  "define( 'SECURE_AUTH_SALT', '' );",
		  "define( 'LOGGED_IN_SALT',   '' );",
		  "define( 'NONCE_SALT',       '' );",
		  "",
		  "//Use for Cookies https://api.wordpress.org/secret-key/1.1/salt/",
		  "",
		  "\\$table_prefix  = 'wpcmk_';",
		  "",
		  "define('WPLANG', 'es_ES' );",
		  "",
		  "if ( !defined('ABSPATH') )",
		  "\tdefine( 'ABSPATH', dirname(__FILE__) . '/' );",
		  "",
		  "require_once( ABSPATH . 'wp-settings.php' );"
		]
	},
	"WordPress | Removes CSS and JS for optimization": {
		"prefix": "wpaop",
		"body": [
			"/* # Optimization",
			"---------------------------------------------------------------------------------------------------- */",
			"add_action( 'wp_enqueue_scripts', 'remove_default_stylesheet_js', 20 );",
			"function remove_default_stylesheet_js() {",
			"\twp_deregister_style('wpmenucart-fontawesome');",
			"\twp_dequeue_style('wpmenucart-icons' );",
			"\twp_dequeue_style('taxonomy-image-plugin-public');",
			"}"
		]
	},
	"PHP | Echo a variable": {
		"prefix": "phpecho",
		"body":"<?php echo \\$${1:var}; ?>"
	},

	"PHP | Echo variable with wrap PRE": {
		"prefix": "phpechopre",
		"body": [
			"echo '<pre>';",
			"print_r(\\$${1:var});",
			"echo '</pre>';"
		]
	},

	"Developer | Loads a Composer Library": {
		"prefix": "devtcomp",
		"body": [
			"/* Load Composer Dependency Libraries */",
			"require plugin_dir_path( __FILE__) . 'vendor/autoload.php';"
		]
	},
	"Posts 2 Posts  | Register Connections": {
		"prefix": "p2pacon",
		"body": [
		  "/**",
		  " * Register Connections with P2P ${1:post_type_1} and ${2:post_type_2}",
		  " *",
		  " * @param void",
		  " * @return void",
		  " */",
		  "function ${0:prefix}_connection_types() {",
		  "\tp2p_register_connection_type( array(",
		  "\t\t'name' => '${1:post_type_1}_to_${2:post_type_2}',",
		  "\t\t'from' => '${1:post_type_1}',",
		  "\t\t'to' => '${2:post_type_2}',",
		  "\t\t'title' => 'ConexiÃ³n ${1:post_type_1} - ${2:post_type_2}'",
		  "\t) );",
		  "",
		  "}",
		  "add_action( 'p2p_init', '${0:prefix}_connection_types' );"
		]
	},
	"Posts 2 Posts  | Shows connected posts": {
		"prefix": "p2pscon",
		"body": [
		  "// Find connected pages",
		  "\\$connected = new WP_Query( array(",
		  "\t'connected_type' => '${1:post_type_1}_to_${2:post_type_2}',",
		  "\t'connected_items' => get_queried_object(),",
		  "\t'nopaging' => true,",
		  ") );",
		  "",
		  "// Display connected pages",
		  "if ( \\$connected->have_posts() ) :",
		  "?>",
		  "\t<h3>Related pages:</h3>",
		  "\t<ul>",
		  "<?php while ( \\$connected->have_posts() ) : \\$connected->the_post(); ?>",
		  "\t\t<li><a href=\"<?php the_permalink(); ?>\"><?php the_title(); ?></a></li>",
		  "<?php endwhile; ?>",
		  "</ul>",
		  "",
		  "<?php",
		  "wp_reset_postdata();",
		  "",
		  "endif;"
		]
	}
}